<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二零一七年终总结</title>
      <link href="/2018/01/22/2017-conclusion/"/>
      <url>/2018/01/22/2017-conclusion/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div><p>时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。</p><h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><hr><p>回顾我的2017，没做什么事，令我能记得就3件大事吧：</p><ul><li>失恋ing</li><li>ACM退役</li><li>顺利保研</li></ul><p><strong>第一件事</strong>就不想过多回忆了，<strong>2014.12.13 ~ 2017.03.01</strong>，曲终人散。<img src="749826.jpg" alt>最后引用《我的少女时代》里的一句话吧。</p><blockquote><p>每人都有一颗林真心，遇见是最美好的小幸运，谢谢你出现在我的青春里。</p></blockquote><p><img src="1.jpg" alt><strong>第二件事</strong>其实也是黯淡退出吧，大三下开始课程繁忙，也就没怎么训练了，再加上暑假考驾照，于是乎就退役了。回顾三年来，从大一入学时电脑都没怎么碰过的小白，到现在算法也略有所知，也是付出过很大的努力吧，毕竟当年每天刷题，为了一个bug而熬夜到凌晨。最后也算是混了个水水的金牌，奖项不算耀眼。但最重要的是从这段经历中，学到了拼搏、坚持的一种精神，这对以后的研究生涯想必也有很大帮助。<img src="2.jpg" alt><strong>第三件事</strong>也是意料之中吧，没有什么波折。纠结了很多，虽然<strong>专业第一</strong>，但是最后还是选择保了本校。要问原因，也许是校园情怀，也许是导师人很好，也许是为了方便更早研究，也许就是懒吧。现在尘埃落定，靠人靠天不如靠自己，继续努力吧。<img src="3.jpg" alt></p><p>过去的一年，学业未有很大长进，看着同学们整页的4.0绩点，心里倒也没有什么不平衡了。下学期保了研之后选了一门研究生的文本挖掘课，也马马虎虎读了几十篇论文，也算是对自然语言处理和深度学习入了个门，最后的presentation做的还算满意。</p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><hr><p>今年最重要的大事莫过于毕业论文了，因为以后要做的方向是句法分析，所以导师给我的毕业论文安排的就是《基于循环神经网络的成分句法分析》。虽然说是基于ACL2013的一篇论文改编的，但是目前为止，我还没有发现有人做和这个完全一样的。也许最后写的好的话可以直接发paper了。</p><p>但是目前基本的框架还没完全搭建起来吧，代码还不是很熟练，现在只写了一个最基础的动态规划+RNN。最近有如下计划：</p><ul><li>准备试一下动态规划+LSTM。</li><li>然后动态规划扩增一个维度，用来保存左右结点的head结点。</li><li>如果这个写好了，就可以和我github找到的PCFG+CYK代码融合了，准备加上每个结点的POS。</li><li>最后加入预训练词向量应该就基本完成了。</li></ul><p>希望能顺利毕业吧，前一段时间一直对一些实现细节有些困惑，代码还写错了，还以为理论错了。也不知道最后出来的结果会怎么样，希望能不错。</p><p>生活方面，最近半年越来越懒了，极少出门，睡得晚，起的也晚。最近买了把尤克里里，也算是陶冶陶冶情操吧，不至于一直盯着电脑。现在也小有长进，能弹一点点了。</p><p>现在能聊天的人越来越少了，QQ微信放那一天也不一定会有人来找，就算有人也多半是咨询问题的，等一个可以交心的人吧。有时我也想过，我是不是太像中央空调了，对所有人都这么有耐心，到头来却还是一个人，付出那么多最后还是一无所有。<img src="4.jpg" alt>最后还是祝自己2018年顺利吧，希望毕业顺利，研究生涯小有收获，最后等一个有缘人吧。</p><blockquote><p>我遇见谁，会有怎样的对白。我等的人，她在多远的未来。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Converison rate</title>
      <link href="/2018/01/22/p1-conversion-rate/"/>
      <url>/2018/01/22/p1-conversion-rate/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> warningswarnings<span class="token punctuation">.</span>simplefilter<span class="token punctuation">(</span><span class="token string">'ignore'</span><span class="token punctuation">)</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> auc<span class="token punctuation">,</span> roc_curve<span class="token punctuation">,</span> classification_report<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>display <span class="token keyword">import</span> display<span class="token punctuation">,</span> Image<span class="token punctuation">,</span> SVG<span class="token punctuation">,</span> Math<span class="token punctuation">,</span> YouTubeVideo<span class="token keyword">import</span> h2o<span class="token keyword">from</span> h2o<span class="token punctuation">.</span>frame <span class="token keyword">import</span> H2OFrame<span class="token keyword">from</span> h2o<span class="token punctuation">.</span>estimators<span class="token punctuation">.</span>random_forest <span class="token keyword">import</span> H2ORandomForestEstimator<span class="token keyword">from</span> h2o<span class="token punctuation">.</span>grid<span class="token punctuation">.</span>grid_search <span class="token keyword">import</span> H2OGridSearch<span class="token operator">%</span>matplotlib inline<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'conversion_data.csv'</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>country</th>      <th>age</th>      <th>new_user</th>      <th>source</th>      <th>total_pages_visited</th>      <th>converted</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>UK</td>      <td>25</td>      <td>1</td>      <td>Ads</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>US</td>      <td>23</td>      <td>1</td>      <td>Seo</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>US</td>      <td>28</td>      <td>1</td>      <td>Seo</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>China</td>      <td>39</td>      <td>1</td>      <td>Seo</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>US</td>      <td>30</td>      <td>1</td>      <td>Seo</td>      <td>6</td>      <td>0</td>    </tr>  </tbody></table></div><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 316200 entries, 0 to 316199Data columns (total 6 columns):country                316200 non-null objectage                    316200 non-null int64new_user               316200 non-null int64source                 316200 non-null objecttotal_pages_visited    316200 non-null int64converted              316200 non-null int64dtypes: int64(4), object(2)memory usage: 14.5+ MB</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>age</th>      <th>new_user</th>      <th>total_pages_visited</th>      <th>converted</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>316200.000000</td>      <td>316200.000000</td>      <td>316200.000000</td>      <td>316200.000000</td>    </tr>    <tr>      <th>mean</th>      <td>30.569858</td>      <td>0.685465</td>      <td>4.872966</td>      <td>0.032258</td>    </tr>    <tr>      <th>std</th>      <td>8.271802</td>      <td>0.464331</td>      <td>3.341104</td>      <td>0.176685</td>    </tr>    <tr>      <th>min</th>      <td>17.000000</td>      <td>0.000000</td>      <td>1.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>24.000000</td>      <td>0.000000</td>      <td>2.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>50%</th>      <td>30.000000</td>      <td>1.000000</td>      <td>4.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>75%</th>      <td>36.000000</td>      <td>1.000000</td>      <td>7.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>max</th>      <td>123.000000</td>      <td>1.000000</td>      <td>29.000000</td>      <td>1.000000</td>    </tr>  </tbody></table></div><p>user base is pretty young, conversion rate at around 3% is industry standard. it make sense.everything seems to make sense here except for max age 123 yrs</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> column <span class="token keyword">in</span> data<span class="token punctuation">.</span>columns<span class="token punctuation">:</span>    uniques <span class="token operator">=</span> sorted<span class="token punctuation">(</span>data<span class="token punctuation">[</span>column<span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{0:20s} {1:5d}\t'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>column<span class="token punctuation">,</span> len<span class="token punctuation">(</span>uniques<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uniques<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>country                  4     [&#39;China&#39;, &#39;Germany&#39;, &#39;UK&#39;, &#39;US&#39;]age                     60     [17, 18, 19, 20, 21, 22, 23, 24, 25, 26]new_user                 2     [0, 1]source                   3     [&#39;Ads&#39;, &#39;Direct&#39;, &#39;Seo&#39;]total_pages_visited     29     [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]converted                2     [0, 1]</code></pre><p>A few quick observations: the site is probably a US site, although it does have a large Chinese user base as well user base is pretty young conversion rate at around 3% is industry standard. It makes sense. everything seems to make sense here except for max age 123 yrs! Let’s investigate it:</p><h1 id="Remove-Outliers"><a href="#Remove-Outliers" class="headerlink" title="Remove Outliers"></a>Remove Outliers</h1><p>Typically, age should be below 100. So, first let check outliers and clean the dataset</p><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>country</th>      <th>age</th>      <th>new_user</th>      <th>source</th>      <th>total_pages_visited</th>      <th>converted</th>    </tr>  </thead>  <tbody>    <tr>      <th>90928</th>      <td>Germany</td>      <td>123</td>      <td>0</td>      <td>Seo</td>      <td>15</td>      <td>1</td>    </tr>    <tr>      <th>295581</th>      <td>UK</td>      <td>111</td>      <td>0</td>      <td>Ads</td>      <td>10</td>      <td>1</td>    </tr>  </tbody></table></div><p>There are only two records that is invalid, let’s first remove them directly</p><p>It is just 2 users! In this case, we can remove them, nothing will change. In general, depending on theproblem, you can:</p><ul><li>remove the entire row saying you don’t trust the data</li><li>treat those values as NAsif there is a pattern, try to figure out what went wrong.In doubt, always go with removing the row. It is the safest choice.You probably also want to emphasize in the text that wrong data is worrisome and can be an indicator ofsome bug in the logging code. Therefore, you’d like to talk to the software engineer who implemented thecode to see if, perhaps, there are some bugs which affect the data significantly.</li><li>Anyway, here is probably just users who put wrong data. So let’s remove them:</li></ul><pre class="line-numbers language-python"><code class="language-python">data <span class="token operator">=</span> data<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Exploratory-Data-Analysis"><a href="#Exploratory-Data-Analysis" class="headerlink" title="Exploratory Data Analysis"></a>Exploratory Data Analysis</h1><p>now let’s quickly investigate the variables and how their distribution differs for the two classes, this will help us understand whether ther is any information in our data in the first place and get a sense of the data</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Visualization of different countries</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'country'</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">'converted'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Count Plot of Country'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'country'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'converted'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Mean Conversion Rate per Country'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_14_0.png" alt="png"></p><p>Here it clearly looks like Chinese covert at a much lower rate than other countries.</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Visualization of different user types</span>grouped <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'new_user'</span><span class="token punctuation">,</span> <span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'new_user'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'new_user'</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">'converted'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Count Plot of User Types'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'new_user'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'converted'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Mean Conversion Rate per User Type'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_16_0.jpg" alt="png"></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Visualization of different sources</span>grouped <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'source'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'source'</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">'converted'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Count Plot of Different Sources'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'source'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'converted'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Mean Conversion Rate per Source'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_17_0.png" alt="png"></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Visualization of different age</span>grouped <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>hist_kws<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'histtype'</span><span class="token punctuation">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> <span class="token string">'edgecolor'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">,</span> <span class="token string">'alpha'</span><span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">}</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>distplot<span class="token punctuation">(</span>data<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Converted 0'</span><span class="token punctuation">,</span>              ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hist_kws<span class="token operator">=</span>hist_kws<span class="token punctuation">)</span>sns<span class="token punctuation">.</span>distplot<span class="token punctuation">(</span>data<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Converted 1'</span><span class="token punctuation">,</span>              ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hist_kws<span class="token operator">=</span>hist_kws<span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Count Plot of Age'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>grouped<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> grouped<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'.-'</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Mean Conversion Rate vs. Age'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'Mean convertion rate'</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_18_0.png" alt="png"></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Visualization of different sources</span>grouped <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'total_pages_visited'</span><span class="token punctuation">,</span> <span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'total_pages_visited'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>distplot<span class="token punctuation">(</span>data<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'total_pages_visited'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              label<span class="token operator">=</span><span class="token string">'Converted 0'</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hist_kws<span class="token operator">=</span>hist_kws<span class="token punctuation">)</span>sns<span class="token punctuation">.</span>distplot<span class="token punctuation">(</span>data<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'total_pages_visited'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              label<span class="token operator">=</span><span class="token string">'Converted 1'</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hist_kws<span class="token operator">=</span>hist_kws<span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Count Plot of Age'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>grouped<span class="token punctuation">[</span><span class="token string">'total_pages_visited'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> grouped<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'.-'</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Mean Conversion Rate vs. Total_pages_visited'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'total_pages_visited'</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'Mean convertion rate'</span><span class="token punctuation">)</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_19_0.png" alt="png"></p><p>definitely spending more time on the site implies higher probability of conversion</p><h1 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Initialize H2O cluster</span>h2o<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>h2o<span class="token punctuation">.</span>remove_all<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>Checking whether there is an H2O instance running at http://localhost:54321 ..... not found.Attempting to start a local H2O server...; Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)  Starting server from C:\Users\Naixin\Anaconda3\lib\site-packages\h2o\backend\bin\h2o.jar  Ice root: C:\Users\Naixin\AppData\Local\Temp\tmpmhgna45g  JVM stdout: C:\Users\Naixin\AppData\Local\Temp\tmpmhgna45g\h2o_Naixin_started_from_python.out  JVM stderr: C:\Users\Naixin\AppData\Local\Temp\tmpmhgna45g\h2o_Naixin_started_from_python.err  Server is running at http://127.0.0.1:54321Connecting to H2O server at http://127.0.0.1:54321 ... successful.</code></pre><div style="overflow:auto"><table style="width:50%"><tr><td>H2O cluster uptime:</td><td>03 secs</td></tr><tr><td>H2O cluster timezone:</td><td>America/Chicago</td></tr><tr><td>H2O data parsing timezone:</td><td>UTC</td></tr><tr><td>H2O cluster version:</td><td>3.26.0.6</td></tr><tr><td>H2O cluster version age:</td><td>4 days </td></tr><tr><td>H2O cluster name:</td><td>H2O_from_python_Naixin_fptvaq</td></tr><tr><td>H2O cluster total nodes:</td><td>1</td></tr><tr><td>H2O cluster free memory:</td><td>1.747 Gb</td></tr><tr><td>H2O cluster total cores:</td><td>4</td></tr><tr><td>H2O cluster allowed cores:</td><td>4</td></tr><tr><td>H2O cluster status:</td><td>accepting new members, healthy</td></tr><tr><td>H2O connection url:</td><td>http://127.0.0.1:54321</td></tr><tr><td>H2O connection proxy:</td><td>None</td></tr><tr><td>H2O internal security:</td><td>False</td></tr><tr><td>H2O API Extensions:</td><td>Amazon S3, Algos, AutoML, Core V3, TargetEncoder, Core V4</td></tr><tr><td>Python version:</td><td>3.7.3 final</td></tr></table></div><ul><li>I am going to pick a random forest to predict conversion rate. </li><li>I pick a random forest cause: it usually<ol><li>requires very little time to optimize it (its default params are often close to the best ones) </li><li>it is strong with outliers, irrelevant variables, continuous and discrete variables. </li></ol></li></ul><p>I will use the random forest to predict conversion, then I will use its partial dependence plots and variable importance to get insights about howit got information from the variables. Also, I will build a simple tree to find the most obvious user segmentsand see if they agree with RF partial dependence plots.</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Transform to H2O Frame, and make sure the target variable is categorical</span>h2o_df <span class="token operator">=</span> H2OFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>h2o_df<span class="token punctuation">[</span><span class="token string">'new_user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> h2o_df<span class="token punctuation">[</span><span class="token string">'new_user'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>asfactor<span class="token punctuation">(</span><span class="token punctuation">)</span>h2o_df<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span> <span class="token operator">=</span> h2o_df<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>asfactor<span class="token punctuation">(</span><span class="token punctuation">)</span>h2o_df<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>Parse progress: |█████████████████████████████████████████████████████████| 100%</code></pre><table><thead><tr><th>       </th><th>country  </th><th>age              </th><th>new_user  </th><th>source  </th><th>total_pages_visited  </th><th>converted  </th></tr></thead><tbody><tr><td>type   </td><td>enum     </td><td>int              </td><td>enum      </td><td>enum    </td><td>int                  </td><td>enum       </td></tr><tr><td>mins   </td><td>         </td><td>17.0             </td><td>          </td><td>        </td><td>1.0                  </td><td>           </td></tr><tr><td>mean   </td><td>         </td><td>30.5693110013347 </td><td>          </td><td>        </td><td>4.872918234777034    </td><td>           </td></tr><tr><td>maxs   </td><td>         </td><td>79.0             </td><td>          </td><td>        </td><td>29.0                 </td><td>           </td></tr><tr><td>sigma  </td><td>         </td><td>8.268957596421474</td><td>          </td><td>        </td><td>3.3410533442156267   </td><td>           </td></tr><tr><td>zeros  </td><td>         </td><td>0                </td><td>          </td><td>        </td><td>0                    </td><td>           </td></tr><tr><td>missing</td><td>0        </td><td>0                </td><td>0         </td><td>0       </td><td>0                    </td><td>0          </td></tr><tr><td>0      </td><td>UK       </td><td>25.0             </td><td>1         </td><td>Ads     </td><td>1.0                  </td><td>0          </td></tr><tr><td>1      </td><td>US       </td><td>23.0             </td><td>1         </td><td>Seo     </td><td>5.0                  </td><td>0          </td></tr><tr><td>2      </td><td>US       </td><td>28.0             </td><td>1         </td><td>Seo     </td><td>4.0                  </td><td>0          </td></tr><tr><td>3      </td><td>China    </td><td>39.0             </td><td>1         </td><td>Seo     </td><td>5.0                  </td><td>0          </td></tr><tr><td>4      </td><td>US       </td><td>30.0             </td><td>1         </td><td>Seo     </td><td>6.0                  </td><td>0          </td></tr><tr><td>5      </td><td>US       </td><td>31.0             </td><td>0         </td><td>Seo     </td><td>1.0                  </td><td>0          </td></tr><tr><td>6      </td><td>China    </td><td>27.0             </td><td>1         </td><td>Seo     </td><td>4.0                  </td><td>0          </td></tr><tr><td>7      </td><td>US       </td><td>23.0             </td><td>0         </td><td>Ads     </td><td>4.0                  </td><td>0          </td></tr><tr><td>8      </td><td>UK       </td><td>29.0             </td><td>0         </td><td>Direct  </td><td>4.0                  </td><td>0          </td></tr><tr><td>9      </td><td>US       </td><td>25.0             </td><td>0         </td><td>Ads     </td><td>2.0                  </td><td>0          </td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Split into 75% training and 25% test dataset</span>strat_split <span class="token operator">=</span> h2o_df<span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>stratified_split<span class="token punctuation">(</span>test_frac<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> seed<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>train <span class="token operator">=</span> h2o_df<span class="token punctuation">[</span>strat_split <span class="token operator">==</span> <span class="token string">'train'</span><span class="token punctuation">]</span>test <span class="token operator">=</span> h2o_df<span class="token punctuation">[</span>strat_split <span class="token operator">==</span> <span class="token string">'test'</span><span class="token punctuation">]</span>feature <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'country'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'new_user'</span><span class="token punctuation">,</span> <span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'total_pages_visited'</span><span class="token punctuation">]</span>target <span class="token operator">=</span> <span class="token string">'converted'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Build random forest model</span>model <span class="token operator">=</span> H2ORandomForestEstimator<span class="token punctuation">(</span>balance_classes<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ntrees<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>                                  mtries<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> seed<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> score_each_iteration<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>train<span class="token punctuation">(</span>x<span class="token operator">=</span>feature<span class="token punctuation">,</span> y<span class="token operator">=</span>target<span class="token punctuation">,</span> training_frame<span class="token operator">=</span>train<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>drf Model Build progress: |███████████████████████████████████████████████| 100%</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Feature importance</span>importance <span class="token operator">=</span> model<span class="token punctuation">.</span>varimp<span class="token punctuation">(</span>use_pandas<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'scaled_importance'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'variable'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>importance<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_27_0.png" alt="png"></p><p>total pages visited is the most important one, by far.Unfortunately, it is probably the least “actionable”. People visit many pages cause they already want to buy. Also, in order to buy you have to click on multipages</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Make predictions</span>train_true <span class="token operator">=</span> train<span class="token punctuation">.</span>as_data_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>valuestest_true <span class="token operator">=</span> test<span class="token punctuation">.</span>as_data_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'converted'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>valuestrain_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>train<span class="token punctuation">)</span><span class="token punctuation">.</span>as_data_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'p1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>valuestest_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">.</span>as_data_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'p1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>valuestrain_fpr<span class="token punctuation">,</span> train_tpr<span class="token punctuation">,</span> _ <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>train_true<span class="token punctuation">,</span> train_pred<span class="token punctuation">)</span>test_fpr<span class="token punctuation">,</span> test_tpr<span class="token punctuation">,</span> _ <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>test_true<span class="token punctuation">,</span> test_pred<span class="token punctuation">)</span>train_auc <span class="token operator">=</span> np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>auc<span class="token punctuation">(</span>train_fpr<span class="token punctuation">,</span> train_tpr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>test_auc <span class="token operator">=</span> np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>auc<span class="token punctuation">(</span>test_fpr<span class="token punctuation">,</span> test_tpr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>drf prediction progress: |████████████████████████████████████████████████| 100%drf prediction progress: |████████████████████████████████████████████████| 100%</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Classification report</span><span class="token keyword">print</span><span class="token punctuation">(</span>classification_report<span class="token punctuation">(</span>y_true<span class="token operator">=</span>test_true<span class="token punctuation">,</span> y_pred<span class="token operator">=</span><span class="token punctuation">(</span>test_pred <span class="token operator">></span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>              precision    recall  f1-score   support           0       0.99      1.00      0.99     76500           1       0.84      0.63      0.72      2550    accuracy                           0.98     79050   macro avg       0.91      0.82      0.86     79050weighted avg       0.98      0.98      0.98     79050</code></pre><p>​    </p><pre class="line-numbers language-python"><code class="language-python">fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>train_fpr<span class="token punctuation">,</span> train_tpr<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Train AUC: '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>train_auc<span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>test_fpr<span class="token punctuation">,</span> test_tpr<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Test AUC: '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>test_auc<span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'False Positive Rate'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'True Positive Rate'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="conversion_rate_31_0.png" alt="png"></p><pre class="line-numbers language-python"><code class="language-python">_ <span class="token operator">=</span> model<span class="token punctuation">.</span>partial_plot<span class="token punctuation">(</span>train<span class="token punctuation">,</span> cols<span class="token operator">=</span>feature<span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>PartialDependencePlot progress: |█████████████████████████████████████████| 100%</code></pre><p><img src="conversion_rate_32_1.png" alt="png"></p><p>In partial dependency plots, we just care about trends, not the actual y valueso this shows:</p><ul><li>user with old account are better than new users</li><li>china is really bad, all other country are similar with Germany being the best</li><li>the site works very well for young people and bad for less young people(&gt;30)</li><li>source is irrelative</li></ul><h1 id="Conclusions-and-suggestions"><a href="#Conclusions-and-suggestions" class="headerlink" title="Conclusions and suggestions:"></a>Conclusions and suggestions:</h1><pre class="line-numbers language-python"><code class="language-python">i <span class="token operator">=</span> Image<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">'conclusion.png'</span><span class="token punctuation">)</span>i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="conversion_rate_35_0.png" alt="png"></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Shutdown h2o instance</span>h2o<span class="token punctuation">.</span>cluster<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>H2O session _sid_a87c closed.</code></pre><p>with more time you spend ~ 1 day trying other models/different params and I would pick the best</p><pre class="line-numbers language-python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Data Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
